Nonterminals useless in grammar

   binops
   fexp
   texp


Terminals unused in grammar

   "+"
   "-"
   "*"
   "/"
   "<>"
   ">"
   "<"
   "float"


Rules useless in grammar

   32 rvalue: binops

   33 binops: "-" binops
   34       | fexp "=" binops
   35       | fexp "<>" binops
   36       | fexp ">" binops
   37       | fexp "<" binops
   38       | fexp "+" binops
   39       | fexp "-" binops
   40       | fexp

   41 fexp: texp "*" fexp
   42     | texp "/" fexp

   43 texp: "(" rvalue ")"
   44     | rvalue


State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: chunks exps

    2 chunks: chunk chunks
    3       | /* empty */

    4 chunk: tydec
    5      | vardec

    6 vardec: "var" ID ":="

    7 rvalue: "var" ID ":"

    8 ty: "var" ID ":" ty ":=" rvalue

    9 tydec: "type" ID "=" ty

   10 ty: type_id
   11   | "array of" type_id "[" NUMCONST "]"
   12   | ID

   13 type_id: "int"
   14        | "str"
   15        | "bool"

   16 exps: exp
   17     | exp ";" exps
   18     | /* empty */

   19 exp: lvalue ":=" rvalue
   20    | "(" exps ")"
   21    | "if" rvalue "then" exp ctrl_else
   22    | "while" rvalue "do" exp
   23    | "break"

   24 ctrl_else: "else" exp
   25          | /* empty */

   26 rvalue: "nil"
   27       | NUMCONST
   28       | STRCONST
   29       | lvalue

   30 lvalue: ID
   31       | ID "[" rvalue "]"


Terminals, with rules where they appear

$end (0) 0
error (256)
"nil" (258) 26
ID (259) 6 7 8 9 12 30 31
NUMCONST (260) 11 27
STRCONST (261) 28
";" (262) 17
":" (263) 7 8
"(" (264) 20
")" (265) 20
"[" (266) 11 31
"]" (267) 11 31
"+" (268)
"-" (269)
"*" (270)
"/" (271)
"=" (272) 9
"<>" (273)
">" (274)
"<" (275)
":=" (276) 6 8 19
"var" (277) 6 7 8
"type" (278) 9
"array of" (279) 11
"int" (280) 13
"float" (281)
"str" (282) 14
"bool" (283) 15
"while" (284) 22
"do" (285) 22
"if" (286) 21
"then" (287) 21
"else" (288) 24
"break" (289) 23


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
program (36)
    on left: 1, on right: 0
chunks (37)
    on left: 2 3, on right: 1 2
chunk (38)
    on left: 4 5, on right: 2
vardec (39)
    on left: 6, on right: 5
rvalue (40)
    on left: 7 26 27 28 29, on right: 8 19 21 22 31
ty (41)
    on left: 8 10 11 12, on right: 8 9
tydec (42)
    on left: 9, on right: 4
type_id (43)
    on left: 13 14 15, on right: 10 11
exps (44)
    on left: 16 17 18, on right: 1 17 20
exp (45)
    on left: 19 20 21 22 23, on right: 16 17 21 22 24
ctrl_else (46)
    on left: 24 25, on right: 21
lvalue (47)
    on left: 30 31, on right: 19 29


state 0

    0 $accept: . program $end
    1 program: . chunks exps
    2 chunks: . chunk chunks
    3       | .  [$end, ID, "(", "while", "if", "break"]
    4 chunk: . tydec
    5      | . vardec
    6 vardec: . "var" ID ":="
    9 tydec: . "type" ID "=" ty

    "var"   shift, and go to state 1
    "type"  shift, and go to state 2

    $default  reduce using rule 3 (chunks)

    program  go to state 3
    chunks   go to state 4
    chunk    go to state 5
    vardec   go to state 6
    tydec    go to state 7


state 1

    6 vardec: "var" . ID ":="

    ID  shift, and go to state 8


state 2

    9 tydec: "type" . ID "=" ty

    ID  shift, and go to state 9


state 3

    0 $accept: program . $end

    $end  shift, and go to state 10


state 4

    1 program: chunks . exps
   16 exps: . exp
   17     | . exp ";" exps
   18     | .  [$end]
   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   22    | . "while" rvalue "do" exp
   23    | . "break"
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    $default  reduce using rule 18 (exps)

    exps    go to state 16
    exp     go to state 17
    lvalue  go to state 18


state 5

    2 chunks: . chunk chunks
    2       | chunk . chunks
    3       | .  [$end, ID, "(", "while", "if", "break"]
    4 chunk: . tydec
    5      | . vardec
    6 vardec: . "var" ID ":="
    9 tydec: . "type" ID "=" ty

    "var"   shift, and go to state 1
    "type"  shift, and go to state 2

    $default  reduce using rule 3 (chunks)

    chunks  go to state 19
    chunk   go to state 5
    vardec  go to state 6
    tydec   go to state 7


state 6

    5 chunk: vardec .

    $default  reduce using rule 5 (chunk)


state 7

    4 chunk: tydec .

    $default  reduce using rule 4 (chunk)


state 8

    6 vardec: "var" ID . ":="

    ":="  shift, and go to state 20


state 9

    9 tydec: "type" ID . "=" ty

    "="  shift, and go to state 21


state 10

    0 $accept: program $end .

    $default  accept


state 11

   30 lvalue: ID .  [$end, ID, ";", "(", ")", "]", ":=", "var", "type", "while", "do", "if", "then", "else", "break"]
   31       | ID . "[" rvalue "]"

    "["  shift, and go to state 22

    $default  reduce using rule 30 (lvalue)


state 12

   16 exps: . exp
   17     | . exp ";" exps
   18     | .  [")"]
   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   20    | "(" . exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   22    | . "while" rvalue "do" exp
   23    | . "break"
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    $default  reduce using rule 18 (exps)

    exps    go to state 23
    exp     go to state 17
    lvalue  go to state 18


state 13

    7 rvalue: . "var" ID ":"
   22 exp: "while" . rvalue "do" exp
   26 rvalue: . "nil"
   27       | . NUMCONST
   28       | . STRCONST
   29       | . lvalue
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    "nil"     shift, and go to state 24
    ID        shift, and go to state 11
    NUMCONST  shift, and go to state 25
    STRCONST  shift, and go to state 26
    "var"     shift, and go to state 27

    rvalue  go to state 28
    lvalue  go to state 29


state 14

    7 rvalue: . "var" ID ":"
   21 exp: "if" . rvalue "then" exp ctrl_else
   26 rvalue: . "nil"
   27       | . NUMCONST
   28       | . STRCONST
   29       | . lvalue
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    "nil"     shift, and go to state 24
    ID        shift, and go to state 11
    NUMCONST  shift, and go to state 25
    STRCONST  shift, and go to state 26
    "var"     shift, and go to state 27

    rvalue  go to state 30
    lvalue  go to state 29


state 15

   23 exp: "break" .

    $default  reduce using rule 23 (exp)


state 16

    1 program: chunks exps .

    $default  reduce using rule 1 (program)


state 17

   16 exps: exp .  [$end, ")"]
   17     | exp . ";" exps

    ";"  shift, and go to state 31

    $default  reduce using rule 16 (exps)


state 18

   19 exp: lvalue . ":=" rvalue

    ":="  shift, and go to state 32


state 19

    2 chunks: chunk chunks .

    $default  reduce using rule 2 (chunks)


state 20

    6 vardec: "var" ID ":=" .

    $default  reduce using rule 6 (vardec)


state 21

    8 ty: . "var" ID ":" ty ":=" rvalue
    9 tydec: "type" ID "=" . ty
   10 ty: . type_id
   11   | . "array of" type_id "[" NUMCONST "]"
   12   | . ID
   13 type_id: . "int"
   14        | . "str"
   15        | . "bool"

    ID          shift, and go to state 33
    "var"       shift, and go to state 34
    "array of"  shift, and go to state 35
    "int"       shift, and go to state 36
    "str"       shift, and go to state 37
    "bool"      shift, and go to state 38

    ty       go to state 39
    type_id  go to state 40


state 22

    7 rvalue: . "var" ID ":"
   26       | . "nil"
   27       | . NUMCONST
   28       | . STRCONST
   29       | . lvalue
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"
   31       | ID "[" . rvalue "]"

    "nil"     shift, and go to state 24
    ID        shift, and go to state 11
    NUMCONST  shift, and go to state 25
    STRCONST  shift, and go to state 26
    "var"     shift, and go to state 27

    rvalue  go to state 41
    lvalue  go to state 29


state 23

   20 exp: "(" exps . ")"

    ")"  shift, and go to state 42


state 24

   26 rvalue: "nil" .

    $default  reduce using rule 26 (rvalue)


state 25

   27 rvalue: NUMCONST .

    $default  reduce using rule 27 (rvalue)


state 26

   28 rvalue: STRCONST .

    $default  reduce using rule 28 (rvalue)


state 27

    7 rvalue: "var" . ID ":"

    ID  shift, and go to state 43


state 28

   22 exp: "while" rvalue . "do" exp

    "do"  shift, and go to state 44


state 29

   29 rvalue: lvalue .

    $default  reduce using rule 29 (rvalue)


state 30

   21 exp: "if" rvalue . "then" exp ctrl_else

    "then"  shift, and go to state 45


state 31

   16 exps: . exp
   17     | . exp ";" exps
   17     | exp ";" . exps
   18     | .  [$end, ")"]
   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   22    | . "while" rvalue "do" exp
   23    | . "break"
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    $default  reduce using rule 18 (exps)

    exps    go to state 46
    exp     go to state 17
    lvalue  go to state 18


state 32

    7 rvalue: . "var" ID ":"
   19 exp: lvalue ":=" . rvalue
   26 rvalue: . "nil"
   27       | . NUMCONST
   28       | . STRCONST
   29       | . lvalue
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    "nil"     shift, and go to state 24
    ID        shift, and go to state 11
    NUMCONST  shift, and go to state 25
    STRCONST  shift, and go to state 26
    "var"     shift, and go to state 27

    rvalue  go to state 47
    lvalue  go to state 29


state 33

   12 ty: ID .

    $default  reduce using rule 12 (ty)


state 34

    8 ty: "var" . ID ":" ty ":=" rvalue

    ID  shift, and go to state 48


state 35

   11 ty: "array of" . type_id "[" NUMCONST "]"
   13 type_id: . "int"
   14        | . "str"
   15        | . "bool"

    "int"   shift, and go to state 36
    "str"   shift, and go to state 37
    "bool"  shift, and go to state 38

    type_id  go to state 49


state 36

   13 type_id: "int" .

    $default  reduce using rule 13 (type_id)


state 37

   14 type_id: "str" .

    $default  reduce using rule 14 (type_id)


state 38

   15 type_id: "bool" .

    $default  reduce using rule 15 (type_id)


state 39

    9 tydec: "type" ID "=" ty .

    $default  reduce using rule 9 (tydec)


state 40

   10 ty: type_id .

    $default  reduce using rule 10 (ty)


state 41

   31 lvalue: ID "[" rvalue . "]"

    "]"  shift, and go to state 50


state 42

   20 exp: "(" exps ")" .

    $default  reduce using rule 20 (exp)


state 43

    7 rvalue: "var" ID . ":"

    ":"  shift, and go to state 51


state 44

   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   22    | . "while" rvalue "do" exp
   22    | "while" rvalue "do" . exp
   23    | . "break"
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    exp     go to state 52
    lvalue  go to state 18


state 45

   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   21    | "if" rvalue "then" . exp ctrl_else
   22    | . "while" rvalue "do" exp
   23    | . "break"
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    exp     go to state 53
    lvalue  go to state 18


state 46

   17 exps: exp ";" exps .

    $default  reduce using rule 17 (exps)


state 47

   19 exp: lvalue ":=" rvalue .

    $default  reduce using rule 19 (exp)


state 48

    8 ty: "var" ID . ":" ty ":=" rvalue

    ":"  shift, and go to state 54


state 49

   11 ty: "array of" type_id . "[" NUMCONST "]"

    "["  shift, and go to state 55


state 50

   31 lvalue: ID "[" rvalue "]" .

    $default  reduce using rule 31 (lvalue)


state 51

    7 rvalue: "var" ID ":" .

    $default  reduce using rule 7 (rvalue)


state 52

   22 exp: "while" rvalue "do" exp .

    $default  reduce using rule 22 (exp)


state 53

   21 exp: "if" rvalue "then" exp . ctrl_else
   24 ctrl_else: . "else" exp
   25          | .  [$end, ";", ")", "else"]

    "else"  shift, and go to state 56

    "else"    [reduce using rule 25 (ctrl_else)]
    $default  reduce using rule 25 (ctrl_else)

    ctrl_else  go to state 57


state 54

    8 ty: . "var" ID ":" ty ":=" rvalue
    8   | "var" ID ":" . ty ":=" rvalue
   10   | . type_id
   11   | . "array of" type_id "[" NUMCONST "]"
   12   | . ID
   13 type_id: . "int"
   14        | . "str"
   15        | . "bool"

    ID          shift, and go to state 33
    "var"       shift, and go to state 34
    "array of"  shift, and go to state 35
    "int"       shift, and go to state 36
    "str"       shift, and go to state 37
    "bool"      shift, and go to state 38

    ty       go to state 58
    type_id  go to state 40


state 55

   11 ty: "array of" type_id "[" . NUMCONST "]"

    NUMCONST  shift, and go to state 59


state 56

   19 exp: . lvalue ":=" rvalue
   20    | . "(" exps ")"
   21    | . "if" rvalue "then" exp ctrl_else
   22    | . "while" rvalue "do" exp
   23    | . "break"
   24 ctrl_else: "else" . exp
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    ID       shift, and go to state 11
    "("      shift, and go to state 12
    "while"  shift, and go to state 13
    "if"     shift, and go to state 14
    "break"  shift, and go to state 15

    exp     go to state 60
    lvalue  go to state 18


state 57

   21 exp: "if" rvalue "then" exp ctrl_else .

    $default  reduce using rule 21 (exp)


state 58

    8 ty: "var" ID ":" ty . ":=" rvalue

    ":="  shift, and go to state 61


state 59

   11 ty: "array of" type_id "[" NUMCONST . "]"

    "]"  shift, and go to state 62


state 60

   24 ctrl_else: "else" exp .

    $default  reduce using rule 24 (ctrl_else)


state 61

    7 rvalue: . "var" ID ":"
    8 ty: "var" ID ":" ty ":=" . rvalue
   26 rvalue: . "nil"
   27       | . NUMCONST
   28       | . STRCONST
   29       | . lvalue
   30 lvalue: . ID
   31       | . ID "[" rvalue "]"

    "nil"     shift, and go to state 24
    ID        shift, and go to state 11
    NUMCONST  shift, and go to state 25
    STRCONST  shift, and go to state 26
    "var"     shift, and go to state 27

    rvalue  go to state 63
    lvalue  go to state 29


state 62

   11 ty: "array of" type_id "[" NUMCONST "]" .

    $default  reduce using rule 11 (ty)


state 63

    8 ty: "var" ID ":" ty ":=" rvalue .

    $default  reduce using rule 8 (ty)
