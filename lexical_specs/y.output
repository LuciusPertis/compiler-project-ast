Nonterminals useless in grammar

   chunks
   chunk
   vardec
   tydec
   ty
   type_id


Terminals unused in grammar

   "var"
   "type"


Rules useless in grammar

   27 program: chunks

   28 chunks: chunk chunks

   29 chunk: tydec chunk
   30      | vardec

   31 vardec: "var" ID ":=" exp

   32 tydec: "type" ID "=" ty

   33 ty: type_id

   34 type_id: ID


State 33 conflicts: 8 shift/reduce
State 34 conflicts: 8 shift/reduce
State 36 conflicts: 8 shift/reduce
State 37 conflicts: 9 shift/reduce
State 38 conflicts: 8 shift/reduce
State 42 conflicts: 8 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exps: exp
    3     | exp ";" exp exps
    4     | /* empty */

    5 exp: "nil"
    6    | NUMCONST
    7    | STRCONST
    8    | lvalue
    9    | lvalue ":=" exp
   10    | "-" exp
   11    | exp op exp
   12    | "(" exps ")"
   13    | "if" exp "then" exp ctrl_else
   14    | "while" exp "do" exp
   15    | "break"

   16 ctrl_else: "else" exp
   17          | /* empty */

   18 lvalue: ID

   19 op: "+"
   20   | "-"
   21   | "*"
   22   | "/"
   23   | "="
   24   | "<>"
   25   | ">"
   26   | "<"


Terminals, with rules where they appear

$end (0) 0
error (256)
"nil" (258) 5
ID (259) 18
NUMCONST (260) 6
STRCONST (261) 7
";" (262) 3
"(" (263) 12
")" (264) 12
"+" (265) 19
"-" (266) 10 20
"*" (267) 21
"/" (268) 22
"=" (269) 23
"<>" (270) 24
">" (271) 25
"<" (272) 26
":=" (273) 9
"var" (274)
"type" (275)
"while" (276) 14
"do" (277) 14
"if" (278) 13
"then" (279) 13
"else" (280) 16
"break" (281) 15


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
program (28)
    on left: 1, on right: 0
exps (29)
    on left: 2 3 4, on right: 3 12
exp (30)
    on left: 5 6 7 8 9 10 11 12 13 14 15, on right: 1 2 3 9 10 11 13
    14 16
ctrl_else (31)
    on left: 16 17, on right: 13
lvalue (32)
    on left: 18, on right: 8 9
op (33)
    on left: 19 20 21 22 23 24 25 26, on right: 11


state 0

    0 $accept: . program $end
    1 program: . exp
    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    program  go to state 10
    exp      go to state 11
    lvalue   go to state 12


state 1

    5 exp: "nil" .

    $default  reduce using rule 5 (exp)


state 2

   18 lvalue: ID .

    $default  reduce using rule 18 (lvalue)


state 3

    6 exp: NUMCONST .

    $default  reduce using rule 6 (exp)


state 4

    7 exp: STRCONST .

    $default  reduce using rule 7 (exp)


state 5

    2 exps: . exp
    3     | . exp ";" exp exps
    4     | .  [")"]
    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   12    | "(" . exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    $default  reduce using rule 4 (exps)

    exps    go to state 13
    exp     go to state 14
    lvalue  go to state 12


state 6

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   10    | "-" . exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 15
    lvalue  go to state 12


state 7

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   14    | "while" . exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 16
    lvalue  go to state 12


state 8

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   13    | "if" . exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 17
    lvalue  go to state 12


state 9

   15 exp: "break" .

    $default  reduce using rule 15 (exp)


state 10

    0 $accept: program . $end

    $end  shift, and go to state 18


state 11

    1 program: exp .  [$end]
   11 exp: exp . op exp
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    $default  reduce using rule 1 (program)

    op  go to state 27


state 12

    8 exp: lvalue .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
    9    | lvalue . ":=" exp

    ":="  shift, and go to state 28

    $default  reduce using rule 8 (exp)


state 13

   12 exp: "(" exps . ")"

    ")"  shift, and go to state 29


state 14

    2 exps: exp .  [")"]
    3     | exp . ";" exp exps
   11 exp: exp . op exp
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    ";"   shift, and go to state 30
    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    $default  reduce using rule 2 (exps)

    op  go to state 27


state 15

   10 exp: "-" exp .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   11    | exp . op exp
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    $default  reduce using rule 10 (exp)

    op  go to state 27

    Conflict between rule 10 and token "+" resolved as reduce (%left "+").
    Conflict between rule 10 and token "-" resolved as reduce (%left "-").
    Conflict between rule 10 and token "*" resolved as reduce (%left "*").
    Conflict between rule 10 and token "/" resolved as reduce (%left "/").
    Conflict between rule 10 and token "=" resolved as reduce (%left "=").
    Conflict between rule 10 and token "<>" resolved as reduce (%left "<>").
    Conflict between rule 10 and token ">" resolved as reduce (%left ">").
    Conflict between rule 10 and token "<" resolved as reduce (%left "<").


state 16

   11 exp: exp . op exp
   14    | "while" exp . "do" exp
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26
    "do"  shift, and go to state 31

    op  go to state 27


state 17

   11 exp: exp . op exp
   13    | "if" exp . "then" exp ctrl_else
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"     shift, and go to state 19
    "-"     shift, and go to state 20
    "*"     shift, and go to state 21
    "/"     shift, and go to state 22
    "="     shift, and go to state 23
    "<>"    shift, and go to state 24
    ">"     shift, and go to state 25
    "<"     shift, and go to state 26
    "then"  shift, and go to state 32

    op  go to state 27


state 18

    0 $accept: program $end .

    $default  accept


state 19

   19 op: "+" .

    $default  reduce using rule 19 (op)


state 20

   20 op: "-" .

    $default  reduce using rule 20 (op)


state 21

   21 op: "*" .

    $default  reduce using rule 21 (op)


state 22

   22 op: "/" .

    $default  reduce using rule 22 (op)


state 23

   23 op: "=" .

    $default  reduce using rule 23 (op)


state 24

   24 op: "<>" .

    $default  reduce using rule 24 (op)


state 25

   25 op: ">" .

    $default  reduce using rule 25 (op)


state 26

   26 op: "<" .

    $default  reduce using rule 26 (op)


state 27

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   11    | exp op . exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 33
    lvalue  go to state 12


state 28

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
    9    | lvalue ":=" . exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 34
    lvalue  go to state 12


state 29

   12 exp: "(" exps ")" .

    $default  reduce using rule 12 (exp)


state 30

    3 exps: exp ";" . exp exps
    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 35
    lvalue  go to state 12


state 31

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   14    | "while" exp "do" . exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 36
    lvalue  go to state 12


state 32

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   13    | "if" exp "then" . exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 37
    lvalue  go to state 12


state 33

   11 exp: exp . op exp
   11    | exp op exp .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    "+"       [reduce using rule 11 (exp)]
    "-"       [reduce using rule 11 (exp)]
    "*"       [reduce using rule 11 (exp)]
    "/"       [reduce using rule 11 (exp)]
    "="       [reduce using rule 11 (exp)]
    "<>"      [reduce using rule 11 (exp)]
    ">"       [reduce using rule 11 (exp)]
    "<"       [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)

    op  go to state 27


state 34

    9 exp: lvalue ":=" exp .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   11    | exp . op exp
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    "+"       [reduce using rule 9 (exp)]
    "-"       [reduce using rule 9 (exp)]
    "*"       [reduce using rule 9 (exp)]
    "/"       [reduce using rule 9 (exp)]
    "="       [reduce using rule 9 (exp)]
    "<>"      [reduce using rule 9 (exp)]
    ">"       [reduce using rule 9 (exp)]
    "<"       [reduce using rule 9 (exp)]
    $default  reduce using rule 9 (exp)

    op  go to state 27


state 35

    2 exps: . exp
    3     | . exp ";" exp exps
    3     | exp ";" exp . exps
    4     | .  [")"]
    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   11    | exp . op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "+"       shift, and go to state 19
    "-"       shift, and go to state 38
    "*"       shift, and go to state 21
    "/"       shift, and go to state 22
    "="       shift, and go to state 23
    "<>"      shift, and go to state 24
    ">"       shift, and go to state 25
    "<"       shift, and go to state 26
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    $default  reduce using rule 4 (exps)

    exps    go to state 39
    exp     go to state 14
    lvalue  go to state 12
    op      go to state 27


state 36

   11 exp: exp . op exp
   14    | "while" exp "do" exp .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    "+"       [reduce using rule 14 (exp)]
    "-"       [reduce using rule 14 (exp)]
    "*"       [reduce using rule 14 (exp)]
    "/"       [reduce using rule 14 (exp)]
    "="       [reduce using rule 14 (exp)]
    "<>"      [reduce using rule 14 (exp)]
    ">"       [reduce using rule 14 (exp)]
    "<"       [reduce using rule 14 (exp)]
    $default  reduce using rule 14 (exp)

    op  go to state 27


state 37

   11 exp: exp . op exp
   13    | "if" exp "then" exp . ctrl_else
   16 ctrl_else: . "else" exp
   17          | .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"     shift, and go to state 19
    "-"     shift, and go to state 20
    "*"     shift, and go to state 21
    "/"     shift, and go to state 22
    "="     shift, and go to state 23
    "<>"    shift, and go to state 24
    ">"     shift, and go to state 25
    "<"     shift, and go to state 26
    "else"  shift, and go to state 40

    "+"       [reduce using rule 17 (ctrl_else)]
    "-"       [reduce using rule 17 (ctrl_else)]
    "*"       [reduce using rule 17 (ctrl_else)]
    "/"       [reduce using rule 17 (ctrl_else)]
    "="       [reduce using rule 17 (ctrl_else)]
    "<>"      [reduce using rule 17 (ctrl_else)]
    ">"       [reduce using rule 17 (ctrl_else)]
    "<"       [reduce using rule 17 (ctrl_else)]
    "else"    [reduce using rule 17 (ctrl_else)]
    $default  reduce using rule 17 (ctrl_else)

    ctrl_else  go to state 41
    op         go to state 27


state 38

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   10    | "-" . exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   18 lvalue: . ID
   20 op: "-" .  ["nil", ID, NUMCONST, STRCONST, "(", "-", "while", "if", "break"]

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    "nil"     [reduce using rule 20 (op)]
    ID        [reduce using rule 20 (op)]
    NUMCONST  [reduce using rule 20 (op)]
    STRCONST  [reduce using rule 20 (op)]
    "("       [reduce using rule 20 (op)]
    "while"   [reduce using rule 20 (op)]
    "if"      [reduce using rule 20 (op)]
    "break"   [reduce using rule 20 (op)]
    $default  reduce using rule 20 (op)

    exp     go to state 15
    lvalue  go to state 12

    Conflict between rule 20 and token "-" resolved as reduce (%left "-").


state 39

    3 exps: exp ";" exp exps .

    $default  reduce using rule 3 (exps)


state 40

    5 exp: . "nil"
    6    | . NUMCONST
    7    | . STRCONST
    8    | . lvalue
    9    | . lvalue ":=" exp
   10    | . "-" exp
   11    | . exp op exp
   12    | . "(" exps ")"
   13    | . "if" exp "then" exp ctrl_else
   14    | . "while" exp "do" exp
   15    | . "break"
   16 ctrl_else: "else" . exp
   18 lvalue: . ID

    "nil"     shift, and go to state 1
    ID        shift, and go to state 2
    NUMCONST  shift, and go to state 3
    STRCONST  shift, and go to state 4
    "("       shift, and go to state 5
    "-"       shift, and go to state 6
    "while"   shift, and go to state 7
    "if"      shift, and go to state 8
    "break"   shift, and go to state 9

    exp     go to state 42
    lvalue  go to state 12


state 41

   13 exp: "if" exp "then" exp ctrl_else .

    $default  reduce using rule 13 (exp)


state 42

   11 exp: exp . op exp
   16 ctrl_else: "else" exp .  [$end, "nil", ID, NUMCONST, STRCONST, ";", "(", ")", "+", "-", "*", "/", "=", "<>", ">", "<", "while", "do", "if", "then", "else", "break"]
   19 op: . "+"
   20   | . "-"
   21   | . "*"
   22   | . "/"
   23   | . "="
   24   | . "<>"
   25   | . ">"
   26   | . "<"

    "+"   shift, and go to state 19
    "-"   shift, and go to state 20
    "*"   shift, and go to state 21
    "/"   shift, and go to state 22
    "="   shift, and go to state 23
    "<>"  shift, and go to state 24
    ">"   shift, and go to state 25
    "<"   shift, and go to state 26

    "+"       [reduce using rule 16 (ctrl_else)]
    "-"       [reduce using rule 16 (ctrl_else)]
    "*"       [reduce using rule 16 (ctrl_else)]
    "/"       [reduce using rule 16 (ctrl_else)]
    "="       [reduce using rule 16 (ctrl_else)]
    "<>"      [reduce using rule 16 (ctrl_else)]
    ">"       [reduce using rule 16 (ctrl_else)]
    "<"       [reduce using rule 16 (ctrl_else)]
    $default  reduce using rule 16 (ctrl_else)

    op  go to state 27
